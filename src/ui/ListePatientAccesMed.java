package ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import nf.Connexion;
import nf.Patient;
import nf.SIR;

import javax.swing.*;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

public class ListePatientAccesMed extends JPanel {
    private JPanel panel1;
    private JTree tree1;
    private JButton JButtonAccueil;
    private JButton redactionCompteRenduButton;
    private JButton listeDesPatientsButton;
    private JButton jButtonAccesPACS;
    private JButton jButtonNumerisation;
    private JLabel jLabelNomDocteur;
    private JLabel jLabelIconDocteur;
    private JLabel jLabelDateJr;
    private MainWindow mainWindow;
    private String id;
    private Connexion connexion;
    DefaultMutableTreeNode listePatient;
    private SIR sir;


    public ListePatientAccesMed(MainWindow mainWindow) {

        this.mainWindow = mainWindow;

        this.tree1.setModel(this.buildTree());
        List<Patient> lp = new ArrayList<Patient>();
        JButtonAccueil.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                retourAcceuil();
            }
        });
        JButtonAccueil.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                retourAcceuil();
            }
        });
    }

    public void retourAcceuil() {
        try {
            this.mainWindow.setContentPane(new AcceuilMedecin(mainWindow).panel1);
            this.mainWindow.revalidate();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "retour indisponible pour le moment");
        }
    }


    public DefaultTreeModel buildTree() {

        DefaultMutableTreeNode racine = new DefaultMutableTreeNode("Liste des patients");
        DefaultTreeModel model = new DefaultTreeModel(racine);

        for (int i = 0; i < sir.getListeDMR().size(); i++) {

            listePatient = new DefaultMutableTreeNode("Patient : " + "Mr/Mme " + sir.getListeDMR().get(i).getPatient().getNom());
            DefaultMutableTreeNode nomPatient = new DefaultMutableTreeNode(sir.getListeDMR().get(i).getPatient().getNom());
            DefaultMutableTreeNode prenomPatient = new DefaultMutableTreeNode(sir.getListeDMR().get(i).getPatient().getPrenom());
            DefaultMutableTreeNode datePatient = new DefaultMutableTreeNode(sir.getListeDMR().get(i).getPatient().getNaissance());
            listePatient.add(nomPatient);
            listePatient.add(prenomPatient);
            listePatient.add(datePatient);
            racine.add(listePatient);

        }

        return model;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel2, BorderLayout.NORTH);
        jLabelNomDocteur = new JLabel();
        jLabelNomDocteur.setText("Dr MARTIN Frédéric");
        panel2.add(jLabelNomDocteur, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        jLabelIconDocteur = new JLabel();
        jLabelIconDocteur.setIcon(new ImageIcon(getClass().getResource("/icone medecin.png")));
        jLabelIconDocteur.setText("");
        panel2.add(jLabelIconDocteur, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        jLabelDateJr = new JLabel();
        jLabelDateJr.setText("07/02/2019");
        panel2.add(jLabelDateJr, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(5, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel3, BorderLayout.WEST);
        JButtonAccueil = new JButton();
        JButtonAccueil.setText("Accueil");
        panel3.add(JButtonAccueil, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        redactionCompteRenduButton = new JButton();
        redactionCompteRenduButton.setText("Rédaction compte-rendu");
        panel3.add(redactionCompteRenduButton, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        listeDesPatientsButton = new JButton();
        listeDesPatientsButton.setText("Liste des patients");
        panel3.add(listeDesPatientsButton, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        jButtonAccesPACS = new JButton();
        jButtonAccesPACS.setText("Accès PACS");
        panel3.add(jButtonAccesPACS, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        jButtonNumerisation = new JButton();
        jButtonNumerisation.setText("Numérisation");
        panel3.add(jButtonNumerisation, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel4, BorderLayout.CENTER);
        tree1 = new JTree();
        tree1.setName("");
        tree1.setRequestFocusEnabled(false);
        tree1.setRootVisible(true);
        tree1.setScrollsOnExpand(true);
        tree1.setShowsRootHandles(true);
        tree1.setToolTipText("");
        panel4.add(tree1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

    public JPanel getPanel1() {
        return panel1;
    }

    public void setPanel1(JPanel panel1) {
        this.panel1 = panel1;
    }

    public JTree getTree1() {

        return tree1;
    }

    public void setTree1(JTree tree1) {
        this.tree1 = tree1;
    }

    public JButton getJButtonAccueil() {
        return JButtonAccueil;
    }

    public void setJButtonAccueil(JButton JButtonAccueil) {
        this.JButtonAccueil = JButtonAccueil;
    }

    public JButton getRedactionCompteRenduButton() {
        return redactionCompteRenduButton;
    }

    public void setRedactionCompteRenduButton(JButton redactionCompteRenduButton) {
        this.redactionCompteRenduButton = redactionCompteRenduButton;
    }

    public JButton getListeDesPatientsButton() {

        return listeDesPatientsButton;
    }

    public void setListeDesPatientsButton(JButton listeDesPatientsButton) {
        this.listeDesPatientsButton = listeDesPatientsButton;
    }

    public JButton getjButtonAccesPACS() {
        return jButtonAccesPACS;
    }

    public void setjButtonAccesPACS(JButton jButtonAccesPACS) {
        this.jButtonAccesPACS = jButtonAccesPACS;
    }

    public JButton getjButtonNumerisation() {
        return jButtonNumerisation;
    }

    public void setjButtonNumerisation(JButton jButtonNumerisation) {
        this.jButtonNumerisation = jButtonNumerisation;
    }

    public JLabel getjLabelNomDocteur() {
        return jLabelNomDocteur;
    }

    public void setjLabelNomDocteur(JLabel jLabelNomDocteur) {
        this.jLabelNomDocteur = jLabelNomDocteur;
    }

    public JLabel getjLabelDateJr() {
        return jLabelDateJr;
    }

    public void setjLabelDateJr(JLabel jLabelDateJr) {
        this.jLabelDateJr = jLabelDateJr;
    }
}
